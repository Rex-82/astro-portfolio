---
const { label, destination } = Astro.props;
---

<div class="button button-gradient">
	<a href={destination} role="button">{label}</a>
</div>

<style>
	.button {
		display: flex;
		justify-content: center;
		align-items: center;

		border: 1px solid rgba(var(--accent-light), 0.2);
		border-radius: 8px;

		margin: 2.5rem auto;

		background-color: rgba(var(--accent-light), 0.1);
		background-position: 50%;
		background-size: 110%;

		height: fit-content;
		width: fit-content;

		transform: scale(1);
		/*box-shadow: inset 0 0.125em 0.25em rgba(var(--accent), 0.2);*/

		transition:
			transform 0.6s cubic-bezier(0.22, 1, 0.36, 1),
			border 0.6s cubic-bezier(0.22, 1, 0.36, 1),
			background-size 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.button-gradient {
		background-image: -ms-radial-gradient(
			ellipse farthest-corner at 50% -90%,
			rgba(var(--accent-light), 0.2) -20%,
			transparent 80%
		);
		background-image: -webkit-radial-gradient(
			ellipse farthest-corner at 50% -90%,
			rgba(var(--accent-light), 0.2) -20%,
			transparent 80%
		);
		background-image: -moz-radial-gradient(
			ellipse farthest-corner at 50% -90%,
			rgba(var(--accent-light), 0.2) -20%,
			transparent 80%
		);
		background-image: -o-radial-gradient(
			ellipse farthest-corner at 50% -90%,
			rgba(var(--accent-light), 0.2) -20%,
			transparent 80%
		);
		background-image: radial-gradient(
			ellipse farthest-corner at 50% -90%,
			rgba(var(--accent-light), 0.2) -20%,
			transparent 80%
		);
	}

	@media screen and (min-width: 768px) {
		.button:hover {
			transform: scale(1.05);
			background-size: 120%;
			cursor: pointer;

			border: 1px solid rgba(var(--accent-light), 0.4);
		}
	}

	.button a {
		display: flex;
		justify-content: center;
		align-items: center;

		color: rgb(var(--accent-light));
		text-decoration: none;
		font-size: 1rem;

		padding: 0.75em 2em;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
</style>
